SAVE_REGS MACRO REGS
    IRP D,<REGS>
        PUSH D
    ENDM
ENDM

RESTORE_REGS MACRO REGS
    IRP D,<REGS>
    POP D
    ENDM
ENDM

DIBUJAR_HORIZONTAL MACRO FILA,COLUM,COLOR
    SAVE_REGS <AX,BX,CX,DX>
    MOV AH,6
    MOV AL,0
    MOV BH,COLOR
    MOV CH,FILA
    MOV CL,COLUM
    MOV DH,CH
    MOV DL,CL
    ADD DL,7
    INT 10H
    RESTORE_REGS<AX,BX,CX,DX>
ENDM

DIBUJAR_VERTICAL MACRO FILA,COLUM,COLOR
    SAVE_REGS <AX,BX,CX,DX>
    MOV AH,6
    MOV AL,0
    MOV BH,COLOR
    MOV CH,FILA
    MOV CL,COLUM
    MOV DH,CH
    MOV DL,CL
    ADD DL,1
    ADD DH,3
    INT 10H
    RESTORE_REGS<AX,BX,CX,DX>
ENDM

DIBUJAR_CUADRADO MACRO FILA,COLUM,COLOR
    SAVE_REGS <AX,BX,CX,DX>
    MOV AH,6
    MOV AL,0
    MOV BH,COLOR
    MOV CH,FILA
    MOV CL,COLUM
    MOV DH,CH
    MOV DL,CL
    ADD DL,3
    ADD DH,1
    INT 10H
    RESTORE_REGS<AX,BX,CX,DX>
ENDM

DIBUJAR_BLOQUE MACRO FILA,COLUM,TIPO,COLOR
    LOCAL MI_CUAD,MI_HORI,MI_VERT,FIN_BLOQUE
    SAVE_REGS <AX,BX,CX,DX>
    MOV AH,TIPO
    CMP AH,1
    JE MI_HORI
    CMP AH,2
    JE MI_VERT
    CMP AH,3
    JE MI_CUAD
MI_HORI:
    DIBUJAR_HORIZONTAL FILA,COLUM,COLOR
    JMP FIN_BLOQUE
MI_VERT:
    DIBUJAR_VERTICAL FILA,COLUM,COLOR
    JMP FIN_BLOQUE
MI_CUAD:
    DIBUJAR_CUADRADO FILA,COLUM,COLOR
    JMP FIN_BLOQUE
    
FIN_BLOQUE:
    RESTORE_REGS<AX,BX,CX,DX>  
ENDM

MOSTRAR_STRING MACRO X,ROW,COLUMN,LENGTH,COLOR

    PUSH AX
    PUSH BX

    MOV AX, @DATA
    MOV ES, AX  
    
    MOV AH, 13H
    MOV AL, 0H
    XOR BH,BH
    MOV BL,COLOR
    
    MOV BP, OFFSET X 
    MOV CX, LENGTH
    MOV DH, ROW 
    MOV DL, COLUMN 
    INT 10H
    
    POP BX
    POP AX
    
    ENDM 

TITLE TETRIS
.MODEL SMALL
.STACK 100
.DATA   
    MSG_TETRIS     DB "TETRIS$"
    MSG_GAMEOVER  DB "GAME OVER$"
    COLUM_INI DB 20
    COLUM_FIN DB 60
    BLOQUE_COLUM_INI DB ?
    BLOQUE_COLUM_FIN DB ?
    BLOQUE_FILA_INI DB ?
    BLOQUE_FILA_FIN DB ?
    BLOQUE_ACTUAL DB 0
    COLOR DB ?
.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS,AX
    
    ; MODO DE VIDEO 80X25
    MOV AH,0
    MOV AL,03H
    INT 10H
    
    ;PANTALLA ACTIVA 0
    MOV AH,5
    MOV AL,0
    INT 10H
    
    MOSTRAR_STRING MSG_TETRIS,10,6,6,11110000B
    
MARCO:
    MOV AH, 7H
    MOV BH, 0
    MOV CH,2
    MOV CL,20
    MOV DH,22
    MOV DL,60
    INT 10H
    
    MOV AH, 7H
    MOV BH, 0F0H
    MOV CH,1
    MOV CL,18
    MOV DH,1
    MOV DL,63
    INT 10H
    
    MOV CH,1
    MOV CL,18
    MOV DH,23
    MOV DL,19
    INT 10H
    
    MOV CH,1
    MOV CL,62
    MOV DH,23
    MOV DL,63
    INT 10H
    
    MOV CH,23
    MOV CL,18
    MOV DH,23
    MOV DL,63
    INT 10H
    
GENERAR_RANDOM:
    MOV AH,0H
    INT 1AH
    
    MOV AX,DX
    XOR DX,DX
    MOV CX,3
    DIV CX
    MOV BLOQUE_ACTUAL,DL
    
SIGUIENTE_BLOQUE:
    INC BLOQUE_ACTUAL
    CMP BLOQUE_ACTUAL,1
    JE HORIZONTAL
    CMP BLOQUE_ACTUAL,2
    JE VERTICAL
    CMP BLOQUE_ACTUAL,3
    JE CUADRADO
    JMP GENERAR_RANDOM
    
HORIZONTAL:
    MOV COLOR,00110011B
    MOV BLOQUE_FILA_INI, 2
    MOV BLOQUE_FILA_FIN, 2
    MOV BLOQUE_COLUM_INI,36
    MOV BLOQUE_COLUM_FIN,43
    CALL DIBUJA
    JMP ESPERA

VERTICAL:
    MOV COLOR,01010101B
    MOV BLOQUE_FILA_INI, 2
    MOV BLOQUE_FILA_FIN, 5
    MOV BLOQUE_COLUM_INI,38
    MOV BLOQUE_COLUM_FIN,39
    CALL DIBUJA
    JMP ESPERA
    
AUX_SIGUIENTE:
    JMP GENERAR_RANDOM
    
CUADRADO:
    MOV COLOR,01000100B
    MOV BLOQUE_COLUM_INI,38
    MOV BLOQUE_COLUM_FIN,41
    MOV BLOQUE_FILA_INI, 2
    MOV BLOQUE_FILA_FIN, 3
    CALL DIBUJA
    JMP ESPERA
    
CHECAR_GAMEOVER:
    CMP BLOQUE_FILA_INI,2
    JE GAMEOVER1
    JMP AUX_SIGUIENTE
    
ESPERA:
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY 
    CALL DELAY
    
    
ESPERA2:
    CALL DELAY
    
COLISION:
    MOV DL,BLOQUE_COLUM_INI
    MOV DH,BLOQUE_FILA_FIN
    ADD DH,1
BUSCAR:
    MOV AH,2
    MOV BH,0
    INT 10H
    
    MOV AH,8
    MOV BH,0
    INT 10H
    
    CMP AH, 0 
    JNE CHECAR_GAMEOVER
    ADD DL,1
    CMP DL,BLOQUE_COLUM_FIN
    JNE BUSCAR
    JMP BAJAR_BLOQUE
   
GAMEOVER1:
    JMP GAMEOVER   
    
BAJAR_BLOQUE:
    CALL BORRA
    ADD BLOQUE_FILA_INI, 1
    ADD BLOQUE_FILA_FIN, 1
    CALL DIBUJA
    ;CHECAR SI QUEDO MOVIMIENTO PENDIENTE
    MOV AH,1
    INT 16H
    JZ JUMP_ESPERA
    JMP CHECAR_TECLA
 
CHECAR_TECLA:
    MOV AH,0
    INT 16H
    CMP AH,4DH
    JE ARROW_RIGHT
    CMP AH, 50H
    JE ARROW_DOWN  
    CMP AH,4BH
    JE ARROW_LEFT
  
ARROW_DOWN:
    JMP ESPERA2
JUMP_ESPERA:
    JMP ESPERA  
ARROW_LEFT:
    MOV AL, COLUM_INI
    CMP BLOQUE_COLUM_INI,AL
    JLE JUMP_ESPERA
    CALL BORRA
    SUB BLOQUE_COLUM_INI, 2
    SUB BLOQUE_COLUM_FIN, 2 
    CALL DIBUJA
    JMP JUMP_ESPERA
ARROW_RIGHT:
    MOV AL,COLUM_FIN
    CMP BLOQUE_COLUM_FIN,AL
    JGE JUMP_ESPERA
    CALL BORRA
    ADD BLOQUE_COLUM_INI, 2
    ADD BLOQUE_COLUM_FIN, 2 
    CALL DIBUJA
    JMP JUMP_ESPERA   

GAMEOVER:
    MOSTRAR_STRING MSG_GAMEOVER,12,5,9,11110000B
    MOV AH, 4CH
    INT 21H
    
MAIN ENDP


DELAY PROC
    SAVE_REGS <CX>
    MOV CX, 0FFFFH
CICLODELAY:
    LOOP CICLODELAY
    MOV CX, 0FFFFH
CICLODELAY2:
    LOOP CICLODELAY2
    RESTORE_REGS<CX>
    RET  
DELAY ENDP

DIBUJA PROC
    DIBUJAR_BLOQUE BLOQUE_FILA_INI, BLOQUE_COLUM_INI,BLOQUE_ACTUAL, COLOR
    RET
DIBUJA ENDP

BORRA PROC
    DIBUJAR_BLOQUE BLOQUE_FILA_INI, BLOQUE_COLUM_INI,BLOQUE_ACTUAL,0
    RET
BORRA ENDP

    END MAIN
    

